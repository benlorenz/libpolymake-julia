name: Run Polymake.jl testsuite for pull request branch

on:
  pull_request:

jobs:
  test-polymake:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        julia-version: ['1.5', 'nightly']
        libcxxwrap: [ '' ]
        include:
          - os: ubuntu-latest
            julia-version: 1.3
          - os: macOS-latest
            julia-version: 1.4
          - libcxxwrap: '@0.7'
            os: ubuntu-latest
            julia-version: 1.5
          - os: ubuntu-20.04
            julia-version: 1.5

      fail-fast: true

    steps:
      - uses: actions/checkout@v2.1.0
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
      - name: "set xcode 11.3.1"
        if: matrix.os == 'macOS-latest'
        # until https://github.com/llvm/llvm-project/commit/2464d8135e arrives in xcode ...
        # developers affected by this will need to build libcxxwrap-julia manually as well
        run: echo "::set-env name=DEVELOPER_DIR::/Applications/Xcode_11.3.1.app/Contents/Developer"
      - name: "pin libcxxwrap_julia"
        run: julia --project=test/ -e 'using Pkg;
                                       pkg"add libcxxwrap_julia_jll${{ matrix.libcxxwrap }}";
                                       pkg"pin libcxxwrap_julia_jll";'
      - name: "Add polymake packages"
        run: julia --project=test/ -e 'using Pkg;
                                       pkg"add polymake_jll";
                                       pkg"add libpolymake_julia_jll";'
      - name: "Prepare and set override"
        run: julia --project=test/ test-prepare.jl
      - name: "Build and install"
        run: VERBOSE=ON cmake --build build --config Release --target install -- -j2
      - name: "Look for Polymake.jl branch"
        id: detectbranch
        # look for a branch with the same name for Polymake.jl
        continue-on-error: true
        run: julia --project=test/ -e "using Pkg;
                                       pkg\"add Polymake#${GITHUB_HEAD_REF#refs/heads/}\";"
      - name: "Work around glibcxx issue"
        if: matrix.os == 'ubuntu-20.04'
        run: echo ::set-env name=LD_PRELOAD::/usr/lib/x86_64-linux-gnu/libstdc++.so.6
      - name: "Test Polymake.jl branch"
        if: steps.detectbranch.outcome == 'success'
        run: julia --project=test/ -e 'using Pkg;
                                       pkg"test Polymake";'
